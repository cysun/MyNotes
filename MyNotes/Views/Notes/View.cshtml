@model Note
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService
@{
    ViewData["Title"] = $"MyNotes - {Model.Subject}";
}

<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">Notes</a></li>
        <li class="breadcrumb-item active me-auto">
            @if (Model.Published != null)
            {
                if (Model.IsPublic)
                {
                    <span class="text-success">@Model.Subject</span>
                }
                else
                {
                    <span class="text-warning" title="@Model.Published">@Model.Subject</span>
                }
            }
            else
            {
                @Model.Subject
            }
        </li>
        @if ((await authorizationService.AuthorizeAsync(User, "IsOwner")).Succeeded)
        {
            <li>
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-pencil-fill"></i>
                </a>
            </li>
        }
    </ol>
</nav>

<div class="px-2">
    @Html.Raw(Model.Content)
</div>

<div class="text-end text-muted">
    <small>Last Updated: @Model.Updated.ToLocalTime().ToString("g")</small>
    @if (Model.IsPublic)
    {
        <small class="ms-3">Views: @Model.ViewCount</small>
    }
</div>
