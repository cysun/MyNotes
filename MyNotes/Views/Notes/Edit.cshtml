@model NoteInputModel
@{
    ViewData["Title"] = $"MyNotes - {Model.Subject}";
    var publishBtn = "btn-secondary";
    if (Model.Published != null)
    {
        if (Model.Published < DateTime.UtcNow)
            publishBtn = "btn-success";
        else
            publishBtn = "btn-warning";
    }
    var blogBtn = Model.IsBlog ? "btn-success" : "btn-secondary";
    var pinBtn = Model.IsPinned ? "btn-success" : "btn-secondary";
}

<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">Notes</a></li>
        <li class="breadcrumb-item"><a asp-action="View" asp-route-id="@Model.Id">@Model.Subject</a></li>
        <li class="breadcrumb-item active me-auto">Edit</li>
        <li>
            <button id="delete" class="btn btn-outline-danger btn-sm"><i class="bi bi-trash-fill"></i></button>
        </li>
    </ol>
</nav>

<div class="btn-toolbar mb-3">
    <button id="status" type="button" class="btn btn-success me-2">
        <i class="bi bi-check-circle-fill"></i>
    </button>
    <div class="input-group me-2">
        <button id="publish" class="btn @publishBtn shadow-none"><i class="bi bi-cc-circle"></i></button>
        <input asp-for="Published" class="form-control" />
        <span id="unpublish" class="input-group-text"><i class="bi bi-x-lg"></i></span>
    </div>
    <a asp-controller="Blogs" asp-action="Edit" asp-route-id="@Model.Id" class="btn @blogBtn me-2"><i class="bi bi-broadcast-pin"></i></a>
    <button id="pin" class="btn @pinBtn shadow-none"><i class="bi bi-pin-fill"></i></button>
</div>

<form>
    <div class="mb-3">
        <input asp-for="Subject" class="form-control">
    </div>
    <div class="mb-3">
        <textarea asp-for="Content"></textarea>
    </div>
</form>

@section Scripts{
    <script src="https://cdn.tiny.cloud/1/4jeuqf3mhgytuk82mowljcxt0pbcbem4ivn5xorph63kjcfg/tinymce/6/tinymce.min.js"
            referrerpolicy="origin"></script>
    <script>
        function setStatus(saved) {
            var status = $("#status").hasClass("btn-success");
            if (status == saved) return;
            if (saved)
                $("#status")
                    .removeClass("btn-warning")
                    .addClass('btn-success')
                    .empty()
                    .append("<i class='bi bi-check-circle-fill'></i>");
            else
                $("#status")
                    .removeClass("btn-success")
                    .addClass('btn-warning')
                    .empty()
                    .append("<i class='bi bi-exclamation-circle-fill'></i>");
        }
        // Code from https://stackoverflow.com/questions/14042193/how-to-trigger-an-event-in-input-text-after-i-stop-typing-writing
        var delay = (function () {
            var timer = 0;
            return function (callback, ms) {
                clearTimeout(timer);
                timer = setTimeout(callback, ms);
            };
        })();
        $(function () {
            tinymce.init({
                selector: "textarea#Content",
                plugins: "anchor autolink code image link lists searchreplace table visualblocks wordcount fullscreen",
                menubar: false,
                convert_urls: false,
                browser_spellcheck: true,
                toolbar: "styles fontfamily forecolor backcolor numlist bullist indent outdent hr link image media table code fullscreen",
                setup: (editor) => {
                    editor.on("change input paste undo redo", e => {
                        setStatus(false);
                        delay(function () {
                            $.ajax({
                                url: "@Context.Request.PathBase/notes/@Model.Id/content",
                                method: "put",
                                data: { value: editor.getContent() },
                                success: function () {
                                    setStatus(true);
                                }
                            });
                        }, 1000);
                    });
                },
                height: 700
            });
            $("#Subject").keyup(function () {
                setStatus(false);
                delay(function () {
                    $.ajax({
                        url: "@Context.Request.PathBase/notes/@Model.Id/subject",
                        method: "put",
                        data: { value: $("#Subject").val() },
                        success: function () {
                            setStatus(true);
                        }
                    });
                }, 1000);
            });
            $("#delete").click(function () {
                if (confirm("Are you sure you want to delete this note?"))
                    window.location.href = "@Context.Request.PathBase/notes/delete/@Model.Id";
            });
            $("#unpublish").click(function () {
                if ($("#Published").val()) {
                    $.ajax({
                        url: "@Context.Request.PathBase/notes/@Model.Id/published",
                        method: "put",
                        data: { value: null },
                        success: function () {
                            $("#Published").val("");
                            $("#publish").removeClass("btn-success btn-warning");
                            $("#publish").addClass("btn-secondary");
                        }
                    });
                }
            });
            $("#publish").click(function () {
                var publishDate = $("#Published").val();
                if (publishDate) {
                    $.ajax({
                        url: "@Context.Request.PathBase/notes/@Model.Id/published",
                        method: "put",
                        data: { value: publishDate },
                        success: function () {
                            $("#publish").removeClass("btn-secondary btn-success btn-warning");
                            if (new Date(publishDate) <= Date.now())
                                $("#publish").addClass("btn-success");
                            else
                                $("#publish").addClass("btn-warning");
                        }
                    });
                }
            });
            $("#pin").click(function () {
                $.ajax({
                    url: "@Context.Request.PathBase/notes/@Model.Id/pinned",
                    method: "put",
                    success: function () {
                        $("#pin").toggleClass("btn-secondary").toggleClass("btn-success");
                    }
                });
            });
        });
    </script>
}
