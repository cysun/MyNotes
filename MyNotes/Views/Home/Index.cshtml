@inject Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService
@{
    bool isOwner = (await authorizationService.AuthorizeAsync(User, "IsOwner")).Succeeded;
}
<div class="row">
    <div class="col-md-7">
        <h4 class="text-center">Recent Notes</h4>
        @if (ViewBag.Notes.Count == 0)
        {
            <p class="text-center">No notes were created or viewed recently.</p>
        }
        else
        {
            <table class="table">
                <tbody>
                    @foreach (var note in ViewBag.Notes)
                    {
                        @if (isOwner || !note.IsPrivate)
                        {
                            <tr>
                                <td><a asp-controller="Notes" asp-action="View" asp-route-id="@note.Id">@note.Subject</a></td>
                                <td>@note.Updated.ToString("d")</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="col-md-5">
        <h4 class="text-center">Recent Tags</h4>
        @if (ViewBag.TagRecords.Count == 0)
        {
            <p class="text-center">No tags were created or used recently.</p>
        }
        else
        {
            <table class="table">
                <tbody>
                    @foreach (var tagRecord in ViewBag.TagRecords)
                    {
                        <tr>
                            <td>@tagRecord.Label</td>
                            <td>@tagRecord.Updated.ToString("d")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
