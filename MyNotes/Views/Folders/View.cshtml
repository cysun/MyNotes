@model File
@{
    ViewData["Title"] = $"MyNotes - /{Model.Name}";
    var lockIcon = Model.IsPublic ? "fa-lock-open" : "fa-lock";
}

<nav>
    <ol class="breadcrumb">
        @if (Context.User.Identity.IsAuthenticated)
        {
            <li class="breadcrumb-item"><a asp-controller="Files" asp-action="Index">Files</a></li>
            @foreach (var ancestor in ViewBag.Ancestors)
            {
                <li class="breadcrumb-item"><a asp-action="View" asp-route-id="@ancestor.Id">@ancestor.Name</a></li>
            }
        }
        <li class="breadcrumb-item active">@Model.Name</li>
    </ol>
</nav>

@if (Context.User.Identity.IsAuthenticated)
{
    <div class="btn-toolbar mb-3">
        <button id="lock" type="button" class="btn btn-info mr-3">
            <i id="isPublic" class="fas @lockIcon"></i>
        </button>
        <button id="uploadToggle" type="button" class="btn btn-primary mr-3">
            <i class="fas fa-file-upload"></i>
        </button>
        <button id="newFolderToggle" type="button" class="btn btn-primary mr-3">
            <i class="fas fa-folder-plus"></i>
        </button>
        <div id="newFolderForm" class="input-group">
            <input id="newFolder" type="text" class="form-control" style="width: 20em;">
            <div class="input-group-append">
                <div class="input-group-text" id="clearBtn"><i class="fas fa-times"></i></div>
            </div>
        </div>
    </div>

    <form id="uploadForm" asp-controller="Files" asp-action="Upload" class="dropzone"
          method="post" enctype="multipart/form-data">
        <input type="hidden" name="parentId" value="@Model.Id" />
    </form>
}

<table class="table table-hover">
    <thead>
        <tr>
            <th>Name</th>
            <th>Size</th>
            <th>Updated</th>
            @if (Context.User.Identity.IsAuthenticated)
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var file in Model.Children)
        {
            var icon = file.IsPublic ? "far" : "fas";
            <tr>
                @if (file.IsFolder)
                {

                    <td>
                        <i class="folder @icon fa-folder-open mr-2" style="color: orange;" data-file-id="@file.Id"></i>
                        <a asp-action="View" asp-route-id="@file.Id">@file.Name</a>
                    </td>
                    <td></td>
                }
                else
                {
                    <td>
                        <i class="file @icon fa-file mr-2" style="color: orange;" data-file-id="@file.Id"></i>
                        <a asp-controller="Files" asp-action="Download" asp-route-id="@file.Id">@file.Name</a>
                        @if (file.Version > 1)
                        {
                            <span class="badge badge-info ml-2">v@(file.Version)</span>
                        }
                    </td>
                    <td>@file.Size</td>
                }
                <td>@file.Updated.ToString("g")</td>
                @if (Context.User.Identity.IsAuthenticated)
                {
                    <td>
                        <a asp-controller="Files" asp-action="Edit" asp-route-id="@file.Id" class="btn btn-primary btn-sm">
                            <i class="far fa-edit"></i>
                        </a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@section StyleSheets{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.7.2/dropzone.min.css"
          integrity="sha512-3g+prZHHfmnvE1HBLwUnVuunaPOob7dpksI7/v6UnF/rnKGwHf/GdEq9K7iEN7qTtW+S0iivTcGpeTBqqB04wA=="
          crossorigin="anonymous" />
}
@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.7.2/min/dropzone.min.js"
            integrity="sha512-9WciDs0XP20sojTJ9E7mChDXy6pcO0qHpwbEJID1YVavz2H6QBz5eLoDD8lseZOb2yGT8xDNIV7HIe1ZbuiDWg=="
            crossorigin="anonymous"></script>
    <script>
        Dropzone.options.uploadForm = {
            uploadMultiple: true,
            // uploadMultiple is true, Dropzone add [] to paramName. For some reason ASP.NET Core does not
            // bind it to a collection like for other parameter types. The paramName functio trick is from
            // https://stackoverflow.com/questions/58815724/how-to-integrate-dropzone-js-with-asp-net-core-mvc
            paramName: () => "uploadedFiles",
            parallelUploads: 10,
            queuecomplete: function () {
                location.reload();
            }
        };
        $(function () {
            $("#uploadForm").hide();
            $("#newFolderForm").hide();
            $("#uploadToggle").click(function () {
                $("#uploadForm").toggle();
            });
            $("#newFolderToggle").click(function () {
                $("#newFolderForm").toggle();
                if ($("#newFolderForm").is(":visible"))
                    $("#newFolder").focus();
            });
            $("#newFolder").keyup(function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                var name = $(this).val();
                if (keycode == "13" && name) {
                    $.ajax({
                        url: "@Context.Request.PathBase/folders",
                        method: "post",
                        data: {
                            name,
                            parentId: @Model.Id
                        },
                        success: function () {
                            location.reload();
                        }
                    });
                }
            });
            $("#clearBtn").click(function () {
                $("#newFolder").val("");
            });
            $(".file,.folder").click(function () {
                var fileId = $(this).attr("data-file-id");
                var value = $(this).hasClass("fas") ? "True" : "False";
                $.ajax({
                    url: `@Context.Request.PathBase/files/${fileId}/IsPublic`,
                    method: "put",
                    data: { value },
                    context: $(this),
                    success: function () {
                        this.toggleClass("far");
                        this.toggleClass("fas");
                    }
                });
            });
            $("#lock").click(function () {
                var value = $("#isPublic").hasClass("fa-lock") ? "True" : "False";
                $.ajax({
                    url: `@Context.Request.PathBase/files/${@Model.Id}/IsPublic`,
                    method: "put",
                    data: { value },
                    success: function () {
                        $("#isPublic").toggleClass("fa-lock");
                        $("#isPublic").toggleClass("fa-lock-open");
                    }
                });
            });
        });
    </script>
}
